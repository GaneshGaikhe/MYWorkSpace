package com.example.audit.config; import com.example.vehicle.dto.VehicleEvent; import org.springframework.context.annotation.Bean; import org.springframework.context.annotation.Configuration; import org.springframework.kafka.config.ConcurrentKafkaListenerContainerFactory; import org.springframework.kafka.core.ConsumerFactory; import org.springframework.kafka.core.DefaultKafkaConsumerFactory; import org.springframework.kafka.support.serializer.JsonDeserializer; import org.apache.kafka.common.serialization.StringDeserializer; import java.util.HashMap; import java.util.Map;
@Configuration public class KafkaConfig {
    @Bean public ConsumerFactory<String, VehicleEvent> consumerFactory(){ Map<String,Object> props = new HashMap<>(); props.put(org.apache.kafka.clients.consumer.ConsumerConfig.BOOTSTRAP_SERVERS_CONFIG, System.getenv().getOrDefault("SPRING_KAFKA_BOOTSTRAP_SERVERS","kafka:9092")); props.put(org.apache.kafka.clients.consumer.ConsumerConfig.GROUP_ID_CONFIG, "audit-group"); return new DefaultKafkaConsumerFactory<>(props, new StringDeserializer(), new JsonDeserializer<>(VehicleEvent.class, false)); }
    @Bean public ConcurrentKafkaListenerContainerFactory<String, VehicleEvent> kafkaListenerContainerFactory(){ ConcurrentKafkaListenerContainerFactory<String, VehicleEvent> factory = new ConcurrentKafkaListenerContainerFactory<>(); factory.setConsumerFactory(consumerFactory()); return factory; }
}
